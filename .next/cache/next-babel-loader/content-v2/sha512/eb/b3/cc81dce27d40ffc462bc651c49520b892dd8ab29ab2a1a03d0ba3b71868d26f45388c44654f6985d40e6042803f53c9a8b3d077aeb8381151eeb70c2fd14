{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ayaaa/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://images.dailyhive.com/20160525083908/bc-place-stadium-northern-lights-false-creek-984x500.jpg\",\n    title: \"A First Meetup\",\n    address: \"Some Street on the city\",\n    description: \"The meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://admin-aya1506:Taiyou0127@cluster0.emooi.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n  client.close();\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId; //inside of []\n\n  const client = await MongoClient.connect(\"mongodb+srv://admin-aya1506:Taiyou0127@cluster0.emooi.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: \"https://images.dailyhive.com/20160525083908/bc-place-stadium-northern-lights-false-creek-984x500.jpg\",\n        title: \"A First Meetup\",\n        address: \"Some Street on the city\",\n        description: \"The meetup description\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/ayaaa/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","close","getStaticProps","context","selectedMeetup","findOne","props","meetupData","id","image","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,sGADR;AAEE,IAAA,KAAK,EAAC,gBAFR;AAGE,IAAA,OAAO,EAAC,yBAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AACD,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,uGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AASAf,EAAAA,MAAM,CAACgB,KAAP;AACD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC,CAD4C,CACF;;AAE1C,QAAMd,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,uGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEO;AAAP,GAA1B,CAA7B;AAEA,SAAO;AACLO,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAAET,QADM;AAEVU,QAAAA,KAAK,EACH,sGAHQ;AAIVC,QAAAA,KAAK,EAAE,gBAJG;AAKVC,QAAAA,OAAO,EAAE,yBALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AACD,eAAe7B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return (\n    <MeetupDetail\n      image=\"https://images.dailyhive.com/20160525083908/bc-place-stadium-northern-lights-false-creek-984x500.jpg\"\n      title=\"A First Meetup\"\n      address=\"Some Street on the city\"\n      description=\"The meetup description\"\n    />\n  );\n}\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://admin-aya1506:Taiyou0127@cluster0.emooi.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n  };\n\n  client.close();\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId; //inside of []\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://admin-aya1506:Taiyou0127@cluster0.emooi.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\n\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image:\n          \"https://images.dailyhive.com/20160525083908/bc-place-stadium-northern-lights-false-creek-984x500.jpg\",\n        title: \"A First Meetup\",\n        address: \"Some Street on the city\",\n        description: \"The meetup description\",\n      },\n    },\n  };\n}\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}